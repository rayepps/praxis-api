
name: 'Auto: Check PR'
on:
  pull_request:
    branches:
      - master
jobs:
  projects_changed:
    name: Detect File Changes
    runs-on: ubuntu-latest
    outputs: 
      api: ${{ steps.matches.outputs.api }}
      app: ${{ steps.matches.outputs.app }}
      auth: ${{ steps.matches.outputs.auth }}
      account_infrastructure: ${{ steps.matches.outputs.account_infrastructure }}
      env_infrastructure: ${{ steps.matches.outputs.env_infrastructure }}
    steps:
      - id: files
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'json'
      - id: matches
        uses: actions/github-script@v4
        env:
          FILES_CHANGED: ${{ steps.files.outputs.all }}
        with:
          script: |
            const changes = JSON.parse(process.env.FILES_CHANGED);
            const matches = (path) => changes.some(c => c.startsWith(path));
            console.log('::set-output name=api::' + matches('api/'));
            console.log('::set-output name=env_infrastructure::' + matches('env-infrastructure/'));
            console.log('::set-output name=account_infrastructure::' + matches('account-infrastructure/'));
  check_api_changes:
    name: Check API
    needs: projects_changed
    runs-on: ubuntu-latest
    if: ${{ needs.projects_changed.outputs.api == 'true' }}
    steps:
      - uses: rayepps/require-semver-bump@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version-regex-pattern: >
            "version": "(.+?)"
          version-file-path: 'api/package.json'
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: 'yarn'
          cache-dependency-path: api/yarn.lock
      - run: yarn
        working-directory: ./api
      - run: yarn test
        working-directory: ./api
      - run: yarn lint
        working-directory: ./api
      - run: yarn build
        working-directory: ./api
  check_account_infrastructure_changes:
    name: Check Account Infrastructure
    needs: projects_changed
    runs-on: ubuntu-latest
    if: ${{ needs.projects_changed.outputs.account_infrastructure == 'true' }}
    steps:
      - uses: rayepps/require-semver-bump@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version-regex-pattern: >
            "version": "(.+?)"
          version-file-path: 'account-infrastructure/package.json'
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.3
      - run: terraform init
        working-directory: ./account-infrastructure
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - run: terraform validate .
        working-directory: ./account-infrastructure
  check_env_infrastructure_changes:
    name: Check Env Infrastructure
    needs: projects_changed
    runs-on: ubuntu-latest
    if: ${{ needs.projects_changed.outputs.env_infrastructure == 'true' }}
    steps:
      - uses: rayepps/require-semver-bump@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version-regex-pattern: >
            "version": "(.+?)"
          version-file-path: 'env-infrastructure/package.json'
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.3
      - run: terraform init
        working-directory: ./env-infrastructure
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - run: terraform validate .
        working-directory: ./env-infrastructure
  check_api_terraform_changes:
    name: Check API Terraform
    needs: projects_changed
    runs-on: ubuntu-latest
    if: ${{ needs.projects_changed.outputs.api == 'true' }}
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.3
      - run: terraform init
        working-directory: ./api/tf
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: |
          Hack, terraform expects this file to exist, will fail if it does not.
          However, this file is produced by a build which we don't want/need to
          take the time to do here.
        run: echo "{}" > ./manifest.json && touch ./notforglory-api.zip
        working-directory: ./api
      - run: terraform validate .
        working-directory: ./api/tf